def label = "worker-${UUID.randomUUID().toString()}"
def buildNum = "${BUILD_NUMBER}"
def appName = "istio-api-gateway"
def registry  = "${MY_NCR_URL}"
def userAccessKey  = "${MY_USER_ACCESS_KEY}"
def secretAccessKey  = "${MY_USER_SECRET_KEY}"
def githubCredential = "github-credential"
def registryCredential = "ncr-credential" 
def githubURL = "${MY_MERCURY_REPO_URL}"
podTemplate(yaml: '''
              kind: Pod
              metadata:
                name: kaniko-image-build-pod
              spec:
                containers:
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:v1.6.0-debug
                  imagePullPolicy: Always
                  command:
                  - sleep
                  args:
                  - 99d
                  volumeMounts:
                    - name: docker-config
                      mountPath: /kaniko/.docker
                  tty: true
                volumes:
                    - name: docker-config
                      secret:
                        secretName: regcred
                        items:
                        - key: .dockerconfigjson
                          path: config.json
'''
  ) {

  node(POD_LABEL) {
    stage('Build with Kaniko') {

      //git tag를 가져오기 위한 clone 
      git branch: 'master',
        credentialsId: 'github-credential',
        url: 'https://github.com/kyungminchoi/solar.mercury.git'

      script(){
          GIT_TAG = sh (
            script: 'git describe --always',
            returnStdout: true
          ).trim()
      }
			//Image build 
      container('kaniko') {
        //kaniko 에서 빌드하기 위해 소스코드 clone
        git branch: 'main',
          credentialsId: 'github-credential',
          url: 'https://github.com/kyungminchoi/solar.mercury.git'
        
        // kaniko 실행
        sh '/kaniko/executor -f `pwd`/istio-api-gateway/Dockerfile -c `pwd` --insecure --skip-tls-verify --cache=true --destination=c553e74a-kr2-registry.container.nhncloud.com/ncr/istio-api-gateway:' + GIT_TAG
      }

    }
  }
}